modules.load('view < policy')
modules.load('prefill')
modules.load('predict')
modules.load('serve_stale < cache')
modules.load('nsid')

SERVER_NAME = "hu-bud-1"

function interp(s, tab)
  return (s:gsub('($%b{})', function(w) return tab[w:sub(3, -2)] or w end))
end

-- Forwards DNS to CF and Quad9
policy.add(policy.all(policy.TLS_FORWARD({
         { '1.1.1.1', hostname='one.one.one.one', ca_file='/etc/ssl/certs/ca-certificates.crt' },
})))

policy.add(policy.all(policy.TLS_FORWARD({
         { '9.9.9.9', hostname='dns.quad9.net', ca_file='/etc/ssl/certs/ca-certificates.crt' },
})))

-- Reroute subnet list to IP
local function rerouteIP(filePath, ip)
    local f = io.open(filePath, 'r')
    if f then
        for line in f:lines() do
            modules = {
                renumber = {
                    {line, ip},
                }
            }
        end
        f:close()
    end
end

rerouteIP('/etc/cloudflare-v4.list', "193.188.192.47!")
rerouteIP('/etc/cloudflare-v6.list', "2a09:7ac0::1:2d4b:2dc2!")

-- Allow Telekom IP only
local f = io.open('/etc/telekom.list', 'r')
if f then
    for line in f:lines() do
            view:addr(line, policy.all(policy.PASS))
    end
    f:close()
end

local server_name_str = interp("instance_${server}", {server = SERVER_NAME })

nsid.name(server_name_str)

cache.size = 1024 * MB

net.listen('0.0.0.0', 53, { kind = 'dns' })
net.listen('::', 53, { kind = 'dns' })

cache.max_ttl(3600)
cache.min_ttl(30)

view:addr('0.0.0.0/0', policy.all(policy.NO_ANSWER))

